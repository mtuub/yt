name: Create youtube video template
on:
  workflow_call:
    inputs:
      sign:
        required: true
        type: string
      api_url:
        required: true
        type: string
      yt_email:
        required: true
        type: string
      yt_password:
        required: true
        type: string
      affliate_link:
        required: true
        type: string
env:
  API_URL: ${{inputs.api_url}}
  YT_EMAIL: ${{inputs.yt_email}}
  YT_PASSWORD: ${{inputs.yt_password}}
  AFFLIATE_LINK: ${{inputs.affliate_link}}
  SIGN: ${{inputs.sign}}

jobs:
  cache-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm i

  scrape-horoscopes:
    name: Scrape Horoscope
    runs-on: ubuntu-latest
    needs: cache-dependencies
    steps:
      - uses: actions/checkout@v3
      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm run build
      - run: node build/server/scrape_horoscopes.js
      - uses: actions/upload-artifact@v3
        with:
          name: output
          path: ./output

  generate-tts:
    runs-on: ubuntu-latest
    needs: scrape-horoscopes
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm run build
      - run: node build/server/generate_tts.js ${{env.SIGN}}
      - uses: actions/upload-artifact@v3
        with:
          name: output
          path: ./output

  generate-subtitles-and-get-videos-urls:
    runs-on: ubuntu-latest
    needs: generate-tts
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm run build
      - run: node build/server/generate_subtitles_videos.js ${{ env.SIGN }}
      - uses: actions/upload-artifact@v3
        with:
          name: output
          path: ./output
