name: Create youtube video template
on:
  workflow_call:
    inputs:
      sign:
        required: true
        type: string
    secrets:
      API_URL:
        required: true
      YT_EMAIL:
        required: true
      YT_PASSWORD:
        required: true
      AFFLIATE_LINK:
        required: true

env:
  API_URL: ${{secrets.API_URL}}
  YT_EMAIL: ${{secrets.YT_EMAIL}}
  YT_PASSWORD: ${{secrets.YT_PASSWORD}}
  AFFLIATE_LINK: ${{secrets.AFFLIATE_LINK}}
  SIGN: ${{inputs.sign}}

jobs:
  cache-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm i

  scrape-horoscopes:
    name: Scrape Horoscope
    runs-on: ubuntu-latest
    needs: cache-dependencies
    steps:
      - uses: actions/checkout@v3
      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm run build
      - run: node build/server/scrape_horoscopes.js
      - uses: actions/upload-artifact@v3
        with:
          name: output
          path: ./output

  generate-tts:
    runs-on: ubuntu-latest
    needs: scrape-horoscopes
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm run build
      - run: node build/server/generate_tts.js ${{env.SIGN}}
      - uses: actions/upload-artifact@v3
        with:
          name: output
          path: ./output

  generate-subtitles-and-get-videos-urls:
    runs-on: ubuntu-latest
    needs: generate-tts
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm run build
      - run: node build/server/generate_subtitles_videos.js ${{ env.SIGN }}
      - uses: actions/upload-artifact@v3
        with:
          name: output
          path: ./output

  render-video:
    needs: generate-subtitles-and-get-videos-urls
    uses: ./.github/workflows/render-matrix.yml
    with:
      num_of_workers: 20
      remotion_composition_id: Horoscope
      remotion_entry_point: remotion/src/index.tsx
      output_path: output/videos/${{env.SIGN}}.mp4
      sign: ${{env.SIGN}}

  upload-videos-yt:
    runs-on: ubuntu-latest
    needs: render-video
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm run build
      - run: node build/server/generate_thumbnails.js ${{env.SIGN}}
      - run: node build/server/generate_tags.js ${{env.SIGN}}
      - run: node build/server/upload_yt.js ${{env.SIGN}}

  delete-artifacts:
    runs-on: ubuntu-latest
    needs: upload-videos-yt
    steps:
      - uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          expire-in: 0days # Setting this to 0 will delete all artifacts
