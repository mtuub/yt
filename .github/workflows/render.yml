name: Create youtube video
on:
  push:
    branches: master

env:
  NUM_OF_WORKERS: 2

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    steps:
      - id: set-matrix
        run: |
          array=($(for i in $(seq 0 $((${{env.NUM_OF_WORKERS}}-1))); do echo "\"$i\""; done))
          array="["$(echo "${array[@]}" | tr ' ' ',')"]"
          echo "workers_matrix=$array" >> $GITHUB_OUTPUT
    outputs:
      workers_matrix: ${{ steps.set-matrix.outputs.workers_matrix }}

  render-audio:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: FedericoCarboni/setup-ffmpeg@v2

      - run: npm install remotion react react-dom @remotion/cli #TODO:cache

      - id: render-audio
        run: |
          output=$(npx remotion render remotion/src/index.tsx Horoscope output/audio.mp3 --frames=0-10)
          value=$(echo "$output" | grep -oE '[0-9]+/[0-9]+' | awk -F '/' '{if ($1 == $2 && $1 > 3) print $1}' | tail -n 1)
          echo "total_frames=$value" >> $GITHUB_OUTPUT
    outputs:
      total_frames: ${{ steps.set-matrix.outputs.total_frames }}

  render-video:
    runs-on: ubuntu-latest
    needs: [build-matrix, render-audio]
    # env:
    #   TOTAL_FRAMES: ${{needs.render-audio.outputs.total_frames}}
    # strategy:
    #   matrix:
    #     worker_id: ${{ fromJson(needs.build-matrix.outputs.workers_matrix) }}
    steps:
      # - name: Set frames per worker
      #   run: |
      #     framesPerWorker=$((${{env.TOTAL_FRAMES}}/${{env.NUM_OF_WORKERS}}))
      #     echo "FRAMES_PER_WORKER=$framesPerWorker" >> $GITHUB_ENV

      - run: echo ${{needs.build-matrix.outputs.workers_matrix}}
      - run: echo ${{needs.render-audio.outputs.total_frames}}

      # - name: Set start frame
      #   run: echo "start=$((${{matrix.worker}}*${{env.FRAMES_PER_WORKER}}))" >> $GITHUB_ENV

      # - name: Set end frame
      #   run: |
      #     if [ "$matrix.worker" -lt ${{matrix.length}} - 1 ]; then
      #       echo "end=$((${{matrix.worker}}*${{env.FRAMES_PER_WORKER}}+${{env.FRAMES_PER_WORKER}}-1))" >> $GITHUB_ENV
      #     else
      #       echo "end=${{env.TOTAL_FRAMES}}" >> $GITHUB_ENV
      #     fi

      # - run: echo ${{start}} ${{end}}

      # - run: npx remotion render remotion/src/index.tsx Horoscope output/${{matrix.worker}}.mp4 --frames=${{env.start}}-${{env.end}} --muted

      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: output
      #     path: ./output
      #     retention-days: 1
