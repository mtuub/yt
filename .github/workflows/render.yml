name: Create youtube video
on:
  push:
    branches: master

env:
  REMOTION_ENTRY_POINT: remotion/src/index.tsx
  REMOTION_COMPOSITION_ID: Horoscope
  NUM_OF_WORKERS: 25

jobs:
  cache-dependencies:
    runs-on: ubuntu-latest
    steps:
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

  build-matrix:
    runs-on: ubuntu-latest
    steps:
      - id: set-matrix
        run: |
          array=($(for i in $(seq 0 $((${{env.NUM_OF_WORKERS}}-1))); do echo "\"$i\""; done))
          array="["$(echo "${array[@]}" | tr ' ' ',')"]"
          echo "workers_matrix=$array" >> $GITHUB_OUTPUT
    outputs:
      workers_matrix: ${{ steps.set-matrix.outputs.workers_matrix }}

  render-audio:
    runs-on: ubuntu-latest
    needs: [cache-dependencies]
    steps:
      - uses: actions/checkout@v2
      - uses: FedericoCarboni/setup-ffmpeg@v2

      - name: Restore node modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - id: render-audio
        run: |
          output=$(npx remotion render ${{env.REMOTION_ENTRY_POINT}} ${{env.REMOTION_COMPOSITION_ID}} workflow_output/audio.mp3) 
          value=$(echo "$output" | grep -oE '[0-9]+/[0-9]+' | awk -F '/' '{if ($1 == $2 && $1 > 3) print $1}' | tail -n 1)
          echo "total_frames=$value" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v3
        with:
          name: workflow_output
          path: ./workflow_output
          retention-days: 1
    outputs:
      total_frames: ${{ steps.render-audio.outputs.total_frames }}

  render-video:
    runs-on: ubuntu-latest
    needs: [build-matrix, render-audio]
    env:
      TOTAL_FRAMES: ${{needs.render-audio.outputs.total_frames}}
    strategy:
      matrix:
        worker_id: ${{ fromJson(needs.build-matrix.outputs.workers_matrix) }}
    steps:
      - uses: actions/checkout@v2
      - uses: FedericoCarboni/setup-ffmpeg@v2

      - name: Restore node modules cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set frames per worker
        run: |
          framesPerWorker=$((${{env.TOTAL_FRAMES}}/${{env.NUM_OF_WORKERS}}))
          echo "FRAMES_PER_WORKER=$framesPerWorker" >> $GITHUB_ENV

      - name: Set start frame
        run: echo "START_FRAME=$((${{matrix.worker_id}}*${{env.FRAMES_PER_WORKER}}))" >> $GITHUB_ENV

      - name: Set end frame
        run: |
          if [ "${{matrix.worker_id}}" -lt "$((${{env.NUM_OF_WORKERS}}-1))" ]; then
            echo "END_FRAME=$((${{matrix.worker_id}}*${{env.FRAMES_PER_WORKER}}+${{env.FRAMES_PER_WORKER}}-1))" >> $GITHUB_ENV
          else
            echo "END_FRAME=${{env.TOTAL_FRAMES}}" >> $GITHUB_ENV
          fi

      - run: echo ${{env.START_FRAME}} ${{env.END_FRAME}}

      - name: Render muted video
        run: npx remotion render ${{env.REMOTION_ENTRY_POINT}} ${{env.REMOTION_COMPOSITION_ID}} workflow_output/${{matrix.worker_id}}.mp4 --frames=${{env.START_FRAME}}-${{env.END_FRAME}} --muted

      - uses: actions/upload-artifact@v3
        with:
          name: workflow_output
          path: ./workflow_output
