name: Create youtube video
env:
  API_URL: ${{secrets.API_URL}}
  YT_EMAIL: ${{secrets.YT_EMAIL}}
  YT_PASSWORD: ${{secrets.YT_PASSWORD}}
  AFFLIATE_LINK: ${{secrets.AFFLIATE_LINK}}

on:
  push:
    branches: master

jobs:
  # cache-dependencies:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Cache node modules
  #       uses: actions/cache@v3
  #       id: cache-node-modules
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-

  #     - name: Install dependencies
  #       run: npm i

  # scrape-horoscopes:
  #   name: Scrape Horsocope
  #   runs-on: ubuntu-latest
  #   needs: cache-dependencies
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Restore node modules cache
  #       uses: actions/cache@v3
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-
  #     - run: npm run build
  #     - run: node build/server/scrape_horoscopes.js
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: output
  #         path: ./output

  # generate-tts:
  #   runs-on: ubuntu-latest
  #   needs: scrape-horoscopes
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/download-artifact@v3
  #     - name: Restore node modules cache
  #       uses: actions/cache@v3
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-
  #     - run: npm run build
  #     - run: node build/server/generate_tts.js
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: output
  #         path: ./output

  # generate-subtitles-and-get-videos-urls:
  #   runs-on: ubuntu-latest
  #   needs: generate-tts
  #   strategy:
  #     matrix:
  #       sign:
  #         [
  #           "aries",
  #           "taurus",
  #           "gemini",
  #           "cancer",
  #           "leo",
  #           "virgo",
  #           "libra",
  #           "scorpio",
  #           "sagittarius",
  #           "capricorn",
  #           "aquarius",
  #           "pisces",
  #         ]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/download-artifact@v3
  #     - run: npm run install-build
  #     - run: node build/server/generate_subtitles_videos.js ${{ matrix.sign }}
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: output
  #         path: ./output

  # render-videos:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: dawidd6/action-download-artifact@v2
  #       with:
  #         run_id: 4098480733

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: output
  #         path: ./output

  # render-videos:
  #   needs: generate-subtitles-and-get-videos-urls
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       sign:
  #         [
  #           "aries",
  #           "taurus",
  #           "gemini",
  #           "cancer",
  #           "leo",
  #           "virgo",
  #           "libra",
  #           "scorpio",
  #           "sagittarius",
  #           "capricorn",
  #           "aquarius",
  #           "pisces",
  #         ]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/download-artifact@v3
  #     - uses: FedericoCarboni/setup-ffmpeg@v2

  #     - run: npm install remotion react react-dom @remotion/cli
  #     - run: npx remotion render remotion/src/index.tsx  Horoscope videos_muted/${{matrix.sign}}.mp4 --props="{\"sign\":\"${{matrix.sign}}\"}"  --muted
  #     - run: |
  #         mkdir output/videos
  #         ffmpeg -i videos_muted/${{matrix.sign}}.mp4 -i output/audios/${{matrix.sign}}.mp3 -c copy output/videos/${{matrix.sign}}.mp4

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: output
  #         path: ./output
  #         retention-days: 1
  # call-workflow-in-local-repo:
  #   needs: generate-subtitles-and-get-videos-urls
  #   strategy:
  #     matrix:
  #       sign:
  #         [
  #           "aries",
  #           "taurus",
  #           "gemini",
  #           "cancer",
  #           "leo",
  #           "virgo",
  #           "libra",
  #           "scorpio",
  #           "sagittarius",
  #           "capricorn",
  #           "aquarius",
  #           "pisces",
  #         ]
  #   uses: ./.github/workflows/render-matrix.yml
  #   with:
  #     num_of_workers: 2
  #     remotion_composition_id: Horoscope
  #     remotion_entry_point: remotion/src/index.tsx
  #     output_path: output/videos/${{matrix.sign}}.mp4
  #     sign: ${{matrix.sign}}

  upload-videos-yt:
    # runs-on: windows-latest
    needs: render-videos
    steps:
      - uses: actions/checkout@v3
      # - uses: actions/download-artifact@v3
      - uses: dawidd6/action-download-artifact@v2
        with:
          run_id: 4098480733

      - run: npm run install-build
      - run: node build/server/generate_thumbnails.js
      - run: node build/server/generate_tags.js
      - run: node build/server/upload_yt.js

  delete-artifacts:
    runs-on: ubuntu-latest
    needs: upload-videos-yt
    steps:
      - uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          expire-in: 0days # Setting this to 0 will delete all artifacts
